package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"
	"graphqhhowto/database"
	"graphqhhowto/graph/model"
	"strconv"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.User, error) {
	var newUser database.User
	newUser.Name = input.Name
	userID, _ := newUser.Save()
	return &model.User{
		ID:   strconv.FormatInt(int64(userID), 10),
		Name: newUser.Name,
	}, nil
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id string, name string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// CreateCar is the resolver for the createCar field.
func (r *mutationResolver) CreateCar(ctx context.Context, carName string, model string) (*model.Cars, error) {
	panic(fmt.Errorf("not implemented: CreateCar - createCar"))
}

// UpdateCar is the resolver for the updateCar field.
func (r *mutationResolver) UpdateCar(ctx context.Context, id string, carName string, model *string) (*model.Cars, error) {
	panic(fmt.Errorf("not implemented: UpdateCar - updateCar"))
}

// DeleteCar is the resolver for the deleteCar field.
func (r *mutationResolver) DeleteCar(ctx context.Context, id string) (*model.Cars, error) {
	panic(fmt.Errorf("not implemented: DeleteCar - deleteCar"))
}

// AllUsers is the resolver for the allUsers field.
func (r *queryResolver) AllUsers(ctx context.Context, last *int) (*model.User, error) {
	panic(fmt.Errorf("not implemented: AllUsers - allUsers"))
}

// AllCars is the resolver for the allCars field.
func (r *queryResolver) AllCars(ctx context.Context, last *int) (*model.Cars, error) {
	panic(fmt.Errorf("not implemented: AllCars - allCars"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
